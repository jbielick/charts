  __       _    _
 / _| __ _| | _| |_ ___  _ __ _   _
| |_ / _` | |/ / __/ _ \| '__| | | |
|  _| (_| |   <| || (_) | |  | |_| |
|_|  \__,_|_|\_\\__\___/|_|   \__, |
                              |___/

{{ if .Release.IsInstall }}
Welcome to Faktory, let's get working!
{{ if .Values.license }}
You've provided a license for Faktory pro. Please ensure this is a valid license purchased from Crontribsys, LLC.
{{- else }}
You're running Faktory in development mode, which does not implement all of Faktory's features.
Upgrade to Faktory Pro for more features and support. https://contribsys.com/faktory

{{- end }}
{{ if .Values.passwordExistingSecret }}
An existing secret named {{ .Values.passwordExistingSecret.name }} was used for the Faktory
password. Use the following command to fetch it:

  kubectl get secret --namespace {{ .Release.Namespace }} {{ .Values.passwordExistingSecret.name }} -o jsonpath="{.data.{{ .Values.passwordExistingSecret.key }}}" | base64 -D
{{- else }}
A Faktory password was generated into a secret named {{ include "faktory.name" . }}
Use the following commands to retrieve it:

  kubectl get secret --namespace {{ .Release.Namespace }} faktory -o jsonpath="{.data.password}" | base64 -D
{{- end }}
{{ if .Values.ui.enabled }}
You've enabled the UI for Faktory.
Use the following commands to access it locally:
{{ if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort"  .Values.ui.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "faktory.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.ui.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "faktory.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "faktory.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.ui.service.port }}
{{- else if contains "ClusterIP" .Values.ui.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "faktory.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:7421 to use your application"
  kubectl port-forward pod/$POD_NAME 7421:{{ .Values.ui.service.port }}
{{- end }}
{{- end }}
{{- else }}
If you've made any changes to Faktory configs, you'll want to send a SIGHUP to faktory to hot reload its configuration.

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "faktory.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl exec --namespace {{ .Release.Namespace }} -it $POD_NAME -- /bin/kill -HUP 1
{{- end }}
